def organization = 'TYPO3-cookbooks'
def userType = 'orgs' // 'orgs' or 'users'
def repoFilter = ~/.*/

repoApi = new URL("https://api.github.com/${userType}/${organization}/repos?per_page=100")
repos = new groovy.json.JsonSlurper().parse(repoApi.newReader())

repos.findAll{ r -> r.name =~ repoFilter }.each {

  def repoName = it.name
  def jobBaseName = "cookbook-${repoName}".replaceAll('/','-')
  def branchName = "master"

  workflowJob('cookbook-pipeline-' + jobBaseName) {
    definition {
      cps {
        script(
          // TODO find better way to generate this job (e.g. using a template)!
          "node {\n" +
          "  stage 'clone cookbook'\n" +
          "  git url: 'https://github.com/TYPO3-cookbooks/" + repoName + ".git'\n" +
          "  stage 'foodcritic'\n" +
          "  sh 'foodcritic . -f all'\n" +
          "  stage 'testkitchen'\n" +
          "  writeFile file: '.kitchen.docker.yml', text: '''---\n" +
          "driver:\n" +
          "  name: docker\n" +
          "  use_sudo: false\n" +
          "'''\n" +
          "  sh '[ -f .kitchen.yml ] || exit 0; KITCHEN_LOCAL_YAML=.kitchen.docker.yml kitchen test debian'\n" +
          "}"
        )
      }
    }
  }

}
