# <%

if ENV['JENKINS_COPY_CHEF_CREDENTIALS']

  require 'chef/knife'
  k = Chef::Knife.new
  k.configure_chef


  # the existance of the node_name can be taken as "this workstation has a chef setup"
  def is_configured?
    not Chef::Config[:node_name].nil?
  end

  def client_config
    cfg = {}
    %w{client_key node_name chef_server_url}.each{|k| cfg[k.to_sym] = Chef::Config[k]}
    cfg
  end

  def client_key_exists?
    File.exists?(Chef::Config[:client_key]) && File.readable?(Chef::Config[:client_key])
  end

  def client_key_contents_escaped
    File.read(Chef::Config[:client_key]).gsub(/\n/, "|")
  end

elsif ENV['CI']
  # nothing...
else
  STDERR.puts "To interact with your Chef Server, please set JENKINS_COPY_CHEF_CREDENTIALS=1"
end

%>
---
driver:
  name: vagrant
  customize:
    cpus: 4
    memory: 2048

verifier:
  name: inspec

provisioner:
  name: chef_zero

platforms:
  - name: debian-8.6

suites:
  - name: default
    run_list:
      - recipe[site-chefcitypo3org::default]
    attributes:
      jenkins_chefci:
        github_organization: TYPO3-cookbooks-test
        github_credentials:
          login: <%= ENV['JENKINS_GITHUB_LOGIN'] %>
          token: <%= ENV['JENKINS_GITHUB_TOKEN'] %>
<% if ENV['JENKINS_COPY_CHEF_CREDENTIALS'] and is_configured? %>
        knife_config: <%= client_config.to_json %>
        knife_client_key: '<%= client_key_contents_escaped %>'
<% end %>
      site-chefcitypo3org:
        main_repo: ssh://<%= ENV['JENKINS_T3O_USER'] %>@review.typo3.org:29418/Teams/Server/Chef.git
        auth:
          github_client_id: <%= ENV['JENKINS_GITHUB_CLIENT_ID'] %>
          github_client_secret: <%= ENV['JENKINS_GITHUB_CLIENT_SECRET'] %>
    driver_config:
      network:
      - ["private_network", {ip: "192.168.88.23"}]
  - name: databag-secrets
    data_bags_path: "test/integration/databag-secrets/data_bags"
    run_list:
      - recipe[site-chefcitypo3org::default]
    driver_config:
      network:
      - ["private_network", {ip: "192.168.88.24"}]
